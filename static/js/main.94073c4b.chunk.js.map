{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactListItem.module.css","components/ContactList/ContactList.module.css","App.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/contactsSlice.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","filter","createReducer","actions","_","payload","combineReducers","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","store","configureStore","reducer","contacts","filterReducer","middleware","getDefaultMiddleware","devTools","process","ContactForm","useState","name","setName","number","setNumber","data","handleChange","event","target","value","reset","className","s","form","onSubmit","preventDefault","contact","toLowerCase","includes","length","alert","label","type","pattern","title","required","input","onChange","button","connect","state","dispatch","filterInput","ContactListItem","id","phone","item","onClick","normalizedFilter","contactList","map","App","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94073c4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1H5_n\",\"filterInput\":\"Filter_filterInput__RUfqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1tlNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3lECq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1cOmh\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport { changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport * as actions from './phonebook-actions';\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  filter,\n});\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://618e27b650e24d0017ce10dc.mockapi.io/api',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['Contact'],\r\n    }),\r\n\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n\r\n    addContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: `/contacts`,\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useAddContactMutation,\r\n} = contactsApi;\r\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport filterReducer from './phonebook/phonebook-reducer';\nimport { contactsApi } from './contactsSlice';\n\nconst store = configureStore({\n  reducer: {\n    contacts: filterReducer,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { useState } from 'react';\nimport { useFetchContactsQuery } from '../../redux/contactsSlice';\nimport { useAddContactMutation } from '../../redux/contactsSlice';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact] = useAddContactMutation();\n  const { data } = useFetchContactsQuery();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      data.filter(contact =>\n        contact.name.toLowerCase().includes(name.toLowerCase()),\n      ).length > 0\n    ) {\n      return alert(`${name} already in contacts`);\n    }\n\n    addContact({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={s.input}\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={s.filterInput}\n    ></input>\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(changeFilter(event.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useDeleteContactMutation } from '../../redux/contactsSlice';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, phone }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <div className={s.item}>\n      {name}: {phone}\n      <button type=\"button\" onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { useFetchContactsQuery } from '../../redux/contactsSlice';\nimport { connect } from 'react-redux';\nimport ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ filter }) => {\n  const { data } = useFetchContactsQuery();\n  const normalizedFilter = filter.toLowerCase();\n\n  return (\n    <>\n      {data && (\n        <ul className={s.contactList}>\n          {data\n            .filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n            .map(({ id, name, phone }) => {\n              return (\n                <li key={id}>\n                  <ContactListItem id={id} name={name} phone={phone} />\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport s from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3WCBD\",\"label\":\"ContactForm_label__G5Kpe\",\"input\":\"ContactForm_input__2-5od\",\"button\":\"ContactForm_button__1Me_F\"};"],"sourceRoot":""}